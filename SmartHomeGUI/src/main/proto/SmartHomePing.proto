syntax = "proto3";

option java_multiple_files = true;
option java_package = "com.CA.gRPC";
option java_outer_classname = "PingProto";

/*
  Unary is request/response. The client wants a service,
  it sends a request and receives a response.
  If there is a connection failure, the client has to send the same request again.
*/

service StreamingClientService
{
  //Unary RPC
  rpc sendUnaryRequest(UnaryRequest) returns (UnaryResponse);

  //Server-side streaming RPC
  rpc streamClientInformation(stream ClientInformation) returns (ServerResponse);
}

//Message for a Unary request
message UnaryRequest
{
  string name = 1;
}

//Message for a Unary response
message UnaryResponse
{
  string message = 1;
}

message ClientInformation
{
  string clientName = 1;
  string dateTime = 2;
}

message ServerResponse
{
  string message = 1;
}